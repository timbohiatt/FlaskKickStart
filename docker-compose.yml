#=========================================================================================
# Base Docker Compose Image for Basic Web App Quick Start
# Containers:
#     - [FLASK]     Base Flask Web App Build
#     - [MSYQL]     MySQL DB for Flask Application Backend with SQL Alchemy
#     - [CELERY]    Celery Worker Flask Backend Workers
#     - [RABBITMQ]  Rabbit MQ as the Message Broker between Flask and Celery
#
# Developed:
#     - Tim Hiatt [timbohiatt@gmail.com] 
#
#
# Variables Required:
#   
#   << GENERAL VARIABLES >>
#   ${APP_NAME} = The Qualifer of the App You Are Wokring on (Used as a Prefix)
#   ${APP_CONFIG} = Which Stage of the CD/CI Level (Development, Test, Production)
#   ${APP_CODE_BRANCH} = Which Branch of the Code Should We Be Building Against
#   
#   << MYSQL VARIABLES >> 
#   ${MYSQL_USER} = MySQL Service Account Username 
#   ${MYSQL_USER_PASS} = MySQL Service Account Password 
#   ${MYSQL_ROOT_PASS} = MySQL Root Account Password 
#   ${MYSQL_EXPOSE_PORT} = MySQL Port Exposed from Container to Host
#
#   << RABBITMQ VARIABLES >>
#   ${RABBITMQ_EXPOSE_PORT} = The Rabbit MQ Port Exposed from Container to Host
#
#   << CELERY WORKER VARIABLES >>
#   ${CELERY_LOG_LEVEL} = Log Level for The Celery Worker (Info, Debug, Warning, Error, or Critical)
#
#=========================================================================================


version: '3'
services:

#=========================================================================================
# [MYSQL CONTAINER]
#   ${MYSQL_USER} = MySQL Service Account Username 
#   ${MYSQL_USER_PASS} = MySQL Service Account Password 
#   ${MYSQL_ROOT_PASS} = MySQL Root Account Password 
#   ${MYSQL_EXPOSE_PORT} = MySQL Port Exposed from Container to Host
#
#=========================================================================================
  mysql:
    image: mysql:latest
    hostname: ${APP_NAME}_MYSQL
    environment:
      MYSQL_DATABASE: ${APP_NAME}_db
      # So you don't have to use root, but you can if you like
      MYSQL_USER: ${MYSQL_USER}
      # You can use whatever password you like
      MYSQL_PASSWORD: ${MYSQL_USER_PASS}
      # Password for root access
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
    ports:
      #- "${MYSQL_EXPOSE_PORT}:${MYSQL_PORT}"
      - "7306:3306"
    expose:
      # Opens port 3306 on the container
      - "${MYSQL_EXPOSE_PORT}"
    volumes:
      - .:/${APP_NAME}/mysql/data




#=========================================================================================
# [RABBIT-MQ CONTAINER]
#   - Hostname: ${APP_NAME}_RABBITMQ
#   - Exposed Port: ${RABBITMQ_EXPOSE_PORT}
#
#=========================================================================================
  rabbitmq:
    image: 'rabbitmq:3.7.3-alpine'
    hostname: ${APP_NAME}_RABBITMQ
    command: rabbitmq-server
    volumes:
      - '.:/maersk/rabbitmq/data'
    ports:
      - "${RABBITMQ_EXPOSE_PORT}:3306"





#=========================================================================================
# [CELERY WORKER CONTAINER]
#   - Hostname: ${APP_NAME}_CELERY_WORKER
#   - Log Level: ${CELERY_LOG_LEVEL} (Info, Debug, Warning, Error, or Critical)
#
#=========================================================================================
  celery_worker:
    build: 
      context: ./web
      args:
        - APP_NAME=${APP_NAME}
        - APP_CODE_BRANCH=${APP_CODE_BRANCH}
        - GIT_ACCESS_TOKEN=${GIT_ACCESS_TOKEN}
        - GIT_USERNAME=${GIT_USERNAME}
        - GIT_REPO_NAME=${GIT_REPO_NAME}

    hostname: ${APP_NAME}_CELERY_WORKER
    command: celery worker -A run_celery --loglevel=${CELERY_LOG_LEVEL}
    env_file:
      - ./.env
    environment:
      #- DEBUG=1
      - FLASK_CONFIG=${APP_CONFIG}
      - FLASK_APP=run_app.py
      - COMPOSE_PROJECT_NAME=${APP_NAME}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_USER_PASS}
      - MYSQL_HOST=${APP_NAME}_MYSQL
      - MYSQL_PORT=3306
      - MYSQL_DB=${APP_NAME}_db
      - FLASK_SECRET=${FLASK_SECRET}
    volumes:
      - app-data:/${APP_NAME}
    links:
      - mysql
    ports:
      - '${CELERY_EXPOSE_PORT}:5555'
    expose:
      # Opens port 5555 on the container
      - '${CELERY_EXPOSE_PORT}'




#=========================================================================================
# [FLASK APP CONTAINER]
#   - Hostname: ${APP_NAME}_CELERY_WORKER
#   - Log Level: ${CELERY_LOG_LEVEL} (Info, Debug, Warning, Error, or Critical)
#
#=========================================================================================
  flask_web:
    build: 
      context: ./web
      args:
        - APP_NAME=${APP_NAME}
        - APP_CODE_BRANCH=${APP_CODE_BRANCH}
        - GIT_ACCESS_TOKEN=${GIT_ACCESS_TOKEN}
        - GIT_USERNAME=${GIT_USERNAME}
        - GIT_REPO_NAME=${GIT_REPO_NAME}
    hostname: ${APP_NAME}_WEB
    command: ls #gunicorn -w 4 -b 0.0.0.0:5000 --access-logfile - --error-logfile - run:app
    env_file:
      - ./.env
    environment:
      #- DEBUG=${FLASK_DEBUG}
      - FLASK_CONFIG=${APP_CONFIG}
      - FLASK_APP=run_app.py
      - COMPOSE_PROJECT_NAME=${APP_NAME}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_USER_PASS}
      - MYSQL_HOST=${APP_NAME}_MYSQL
      - MYSQL_PORT=3306
      - MYSQL_DB=${APP_NAME}_db
      - FLASK_SECRET=${FLASK_SECRET}
    volumes:
      - app-data:/${APP_NAME}
    links:
      - mysql
    ports:
      - '${FLASK_EXPOSE_PORT}:5000'
    expose:
      # Opens port 5000 on the container
      - '${FLASK_EXPOSE_PORT}'
    #entrypoint: "./web/web_boot.sh"





#=========================================================================================
# Data Volumes
#=========================================================================================
volumes:
  app-data:


